/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.13/samples
 * This project uses @Incubating APIs which are subject to change.
 */
plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-beta10'
    id 'net.kyori.blossom' version '2.1.0'
}

group = 'io.greitan'
version = project.hasProperty('VERSION') ? project.VERSION : 'UNKNOWN'
description = "Plugin that adds support for using VoiceCraft on Java servers."

repositories {
    mavenCentral()
    maven { url = "https://repo.codemc.io/repository/maven-public/" }
    maven { url = "https://repo.papermc.io/repository/maven-public/" }
    maven { url = "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT'
    compileOnly 'com.velocitypowered:velocity-api:3.4.0-SNAPSHOT'
    annotationProcessor 'com.velocitypowered:velocity-api:3.4.0-SNAPSHOT'
    compileOnly 'net.md-5:bungeecord-api:1.20-R0.2'
    
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation "com.github.simplix-softworks:simplixstorage:3.2.3"
}

sourceSets {
    main {
        blossom {
            javaSources {
                property("name", "GeyserVoice")
                property("version", version.toString())
                property("description", description)
                property("url", "https://uninode.de")
            }
            resources {
                property("name", "GeyserVoice")
                property("version", version.toString())
                property("description", description)
                property("url", "https://uninode.de")
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

shadowJar {
    archiveClassifier.set('all')
    relocate 'com.tcoded.folialib', 'io.greitan.avion.folialib'
    
    doLast {
        file("build/libs").listFiles()?.each { File file ->
            if (file.name.endsWith(".jar") && !file.name.contains("-all")) {
                file.delete()
            }
        }
    }
}

task copyToTestServer(type: Copy) {
    from shadowJar.outputs.files
    into "D:\\JavaTest\\plugins"
}

build.finalizedBy shadowJar
if (project.hasProperty('DEV')) shadowJar.finalizedBy copyToTestServer
